//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace PicoDeltaSilverlightClient.Web
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DataStoreEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DataStoreEntities object using the connection string found in the 'DataStoreEntities' section of the application configuration file.
        /// </summary>
        public DataStoreEntities() : base("name=DataStoreEntities", "DataStoreEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DataStoreEntities object.
        /// </summary>
        public DataStoreEntities(string connectionString) : base(connectionString, "DataStoreEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DataStoreEntities object.
        /// </summary>
        public DataStoreEntities(EntityConnection connection) : base(connection, "DataStoreEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FileSignature> FileSignatures
        {
            get
            {
                if ((_FileSignatures == null))
                {
                    _FileSignatures = base.CreateObjectSet<FileSignature>("FileSignatures");
                }
                return _FileSignatures;
            }
        }
        private ObjectSet<FileSignature> _FileSignatures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SessionManifest> SessionManifests
        {
            get
            {
                if ((_SessionManifests == null))
                {
                    _SessionManifests = base.CreateObjectSet<SessionManifest>("SessionManifests");
                }
                return _SessionManifests;
            }
        }
        private ObjectSet<SessionManifest> _SessionManifests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SessionProgress> SessionProgresses
        {
            get
            {
                if ((_SessionProgresses == null))
                {
                    _SessionProgresses = base.CreateObjectSet<SessionProgress>("SessionProgresses");
                }
                return _SessionProgresses;
            }
        }
        private ObjectSet<SessionProgress> _SessionProgresses;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FileSignatures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFileSignatures(FileSignature fileSignature)
        {
            base.AddObject("FileSignatures", fileSignature);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SessionManifests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSessionManifests(SessionManifest sessionManifest)
        {
            base.AddObject("SessionManifests", sessionManifest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SessionProgresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSessionProgresses(SessionProgress sessionProgress)
        {
            base.AddObject("SessionProgresses", sessionProgress);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataStoreModel", Name="FileSignature")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FileSignature : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FileSignature object.
        /// </summary>
        /// <param name="fileId">Initial value of the FileId property.</param>
        /// <param name="filePath">Initial value of the FilePath property.</param>
        public static FileSignature CreateFileSignature(global::System.Guid fileId, global::System.String filePath)
        {
            FileSignature fileSignature = new FileSignature();
            fileSignature.FileId = fileId;
            fileSignature.FilePath = filePath;
            return fileSignature;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid FileId
        {
            get
            {
                return _FileId;
            }
            set
            {
                if (_FileId != value)
                {
                    OnFileIdChanging(value);
                    ReportPropertyChanging("FileId");
                    _FileId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FileId");
                    OnFileIdChanged();
                }
            }
        }
        private global::System.Guid _FileId;
        partial void OnFileIdChanging(global::System.Guid value);
        partial void OnFileIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FilePath
        {
            get
            {
                return _FilePath;
            }
            set
            {
                OnFilePathChanging(value);
                ReportPropertyChanging("FilePath");
                _FilePath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FilePath");
                OnFilePathChanged();
            }
        }
        private global::System.String _FilePath;
        partial void OnFilePathChanging(global::System.String value);
        partial void OnFilePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Signature
        {
            get
            {
                return StructuralObject.GetValidValue(_Signature);
            }
            set
            {
                OnSignatureChanging(value);
                ReportPropertyChanging("Signature");
                _Signature = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Signature");
                OnSignatureChanged();
            }
        }
        private global::System.Byte[] _Signature;
        partial void OnSignatureChanging(global::System.Byte[] value);
        partial void OnSignatureChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataStoreModel", Name="SessionManifest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SessionManifest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SessionManifest object.
        /// </summary>
        /// <param name="sessionId">Initial value of the SessionId property.</param>
        public static SessionManifest CreateSessionManifest(global::System.Guid sessionId)
        {
            SessionManifest sessionManifest = new SessionManifest();
            sessionManifest.SessionId = sessionId;
            return sessionManifest;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SessionId
        {
            get
            {
                return _SessionId;
            }
            set
            {
                if (_SessionId != value)
                {
                    OnSessionIdChanging(value);
                    ReportPropertyChanging("SessionId");
                    _SessionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SessionId");
                    OnSessionIdChanged();
                }
            }
        }
        private global::System.Guid _SessionId;
        partial void OnSessionIdChanging(global::System.Guid value);
        partial void OnSessionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] ManifestObject
        {
            get
            {
                return StructuralObject.GetValidValue(_ManifestObject);
            }
            set
            {
                OnManifestObjectChanging(value);
                ReportPropertyChanging("ManifestObject");
                _ManifestObject = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ManifestObject");
                OnManifestObjectChanged();
            }
        }
        private global::System.Byte[] _ManifestObject;
        partial void OnManifestObjectChanging(global::System.Byte[] value);
        partial void OnManifestObjectChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataStoreModel", Name="SessionProgress")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SessionProgress : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SessionProgress object.
        /// </summary>
        /// <param name="sessionId">Initial value of the SessionId property.</param>
        public static SessionProgress CreateSessionProgress(global::System.Guid sessionId)
        {
            SessionProgress sessionProgress = new SessionProgress();
            sessionProgress.SessionId = sessionId;
            return sessionProgress;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SessionId
        {
            get
            {
                return _SessionId;
            }
            set
            {
                if (_SessionId != value)
                {
                    OnSessionIdChanging(value);
                    ReportPropertyChanging("SessionId");
                    _SessionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SessionId");
                    OnSessionIdChanged();
                }
            }
        }
        private global::System.Guid _SessionId;
        partial void OnSessionIdChanging(global::System.Guid value);
        partial void OnSessionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] ProgressObject
        {
            get
            {
                return StructuralObject.GetValidValue(_ProgressObject);
            }
            set
            {
                OnProgressObjectChanging(value);
                ReportPropertyChanging("ProgressObject");
                _ProgressObject = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProgressObject");
                OnProgressObjectChanged();
            }
        }
        private global::System.Byte[] _ProgressObject;
        partial void OnProgressObjectChanging(global::System.Byte[] value);
        partial void OnProgressObjectChanged();

        #endregion
    
    }

    #endregion
    
}
